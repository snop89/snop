


public class Queen {

    public static boolean isSafe(int arr[][],int r,int c,int n)
    {
        int row=r,col=c;
        while (row>=0)
        {
            if(arr[row][col]==1)
            {
                return false;
            }
            row--;
        }
        row=r;
        col=c;
        while (row>=0 && col>=0)
        {
            if(arr[row][col]==1)
            {
                return false;
            }
            row--;
            col--;
        }
        row=r;
        col=c;
        while (row>=0 && col<n)
        {
            if(arr[row][col]==1)
            {
                return false;
            }
            row--;
            col++;
        }
        return true;
    }
    public static boolean nQueen(int arr[][],int r,int n)
    {
        if(r>=n)
        {
            return true;
        }
        for (int col = 0; col < n; col++) {
            if(isSafe(arr,r,col,n))
            {
                arr[r][col]=1;

                if(nQueen(arr,r+1,n))
                {
                    return  true;
                }
                arr[r][col]=0;
            }
        }
        return false;
    }
    public static void main(String[] args) {

        int arr[][]=new int[4][4];
        nQueen(arr,0,4);
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr.length; j++) {
                System.out.print(arr[i][j]+" ");
            }
            System.out.println();
        }
    }
}
